annotate("text", y = 0.325, x = 4.15,
label = "paste(italic(rho), \" = 0.82\")", parse = TRUE)+
annotate("text", y = 0.275, x = 4.2,
label = "paste(italic(P),\" = 1x\",10^-9)", parse = TRUE)->NMDS1vspH
qplot(pH,NMDS0.5uf.point$MDS1,color=Sample.Type)+
stat_smooth(method="lm", formula=y~poly(x,1), size=0.75, color="gray15")+
theme_bw(12)+theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))+
labs(x="pH",y="NMDS1")+scale_color_manual(name= "SampleType",values=c(color3,color1,color2))+
annotate("text", y = 0.325, x = 4.15,
label = "paste(italic(rho), \" = 0.82\")", parse = TRUE)+
annotate("text", y = 0.275, x = 4.2,
label = "paste(italic(P),\" = 1x\",10^-9)", parse = TRUE)->NMDS1vspH
NMDS1vspH
grid_arrange_shared_legend(NMDS1vspH,pHvsShannon,MDS1vsShannon,MDS1vsPielou,MDS1vsOTUnum
,MDS1vsFaith,ncol=2,nrow = 3,position = "bottom")
library(ggplot2)
library(grid)
library(gridExtra)
grid_arrange_shared_legend(NMDS1vspH,pHvsShannon,MDS1vsShannon,MDS1vsPielou,MDS1vsOTUnum
,MDS1vsFaith,ncol=2,nrow = 3,position = "bottom")
grid_arrange_shared_legend(NMDS1vspH,pHvsShannon,MDS1vsShannon,MDS1vsFaith,MDS1vsPielou,
MDS1vsOTUnum,ncol=2,nrow = 3,position = "bottom")
index<-which(!is.na(pH))
summary(lm(shannon[index] ~ poly(pH[index],degree=2)))
qplot(pH,shannon,color=Sample.Type)+
stat_smooth(method="lm", formula=y~poly(x,2), size=0.75, color="gray15")+
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))+
labs(x="pH",y="Shannon-Wiener Index")->pHvsShannon
cor.test(pH,NMDS0.5uf.point$MDS1) #r0.82, p=1e-9
qplot(pH,NMDS0.5uf.point$MDS1,color=Sample.Type)+
stat_smooth(method="lm", formula=y~poly(x,1), size=0.75, color="gray15")+
theme_bw(12)+theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))+
labs(x="pH",y="NMDS1")+scale_color_manual(name= "SampleType",values=c(color3,color1,color2))->NMDS1vspH
summary(lm(shannon ~ poly(NMDS0.5uf.point$MDS1,degree=2)))  #r^2=0.53, p=1e-7
qplot(NMDS0.5uf.point$MDS1,shannon,color=Sample.Type)+
stat_smooth(method="lm", formula=y~poly(x,2), size=0.75, color="gray15")+
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))+
labs(x="NMDS1",y="Shannon-Wiener Index")->MDS1vsShannon
summary(lm(pielou ~ poly(NMDS0.5uf.point$MDS1,degree=2)))  #r^2=0.45, p=2e-5
qplot(NMDS0.5uf.point$MDS1,pielou,color=Sample.Type)+
stat_smooth(method="lm", formula=y~poly(x,2), size=0.75, color="gray15")+
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))+
labs(x="NMDS1",y="Pielou's J")->MDS1vsPielou
summary(lm(ObservedOTU ~ poly(NMDS0.5uf.point$MDS1,degree=2)))  #r^2=0.68, p=5e-11
qplot(NMDS0.5uf.point$MDS1,ObservedOTU,color=Sample.Type)+
stat_smooth(method="lm", formula=y~poly(x,2), size=0.75, color="gray15")+
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))+
labs(x="NMDS1",y="Observed OTUs")->MDS1vsOTUnum
summary(lm(faith ~ poly(NMDS0.5uf.point$MDS1,degree=2)))  #r^2=0.79, p=2e-12
qplot(NMDS0.5uf.point$MDS1,faith,color=Sample.Type)+
stat_smooth(method="lm", formula=y~poly(x,2), size=0.75, color="gray15")+
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))+
labs(x="NMDS1",y="Faith's Diversity")->MDS1vsFaith
grid_arrange_shared_legend(NMDS1vspH,pHvsShannon,MDS1vsShannon,MDS1vsFaith,MDS1vsPielou,
MDS1vsOTUnum,ncol=2,nrow = 3,position = "bottom")
summary(lm(shannon[index] ~ poly(pH[index],degree=2)))
summary(lm(shannon ~ poly(NMDS0.5uf.point$MDS1,degree=2)))  #r^2=0.53, p=1e-7
summary(lm(pielou ~ poly(NMDS0.5uf.point$MDS1,degree=2)))  #r^2=0.45, p=2e-5
summary(lm(ObservedOTU ~ poly(NMDS0.5uf.point$MDS1,degree=2)))  #r^2=0.68, p=5e-11
summary(lm(faith ~ poly(NMDS0.5uf.point$MDS1,degree=2)))  #r^2=0.79, p=2e-12
summary(lm(ObservedOTU ~ poly(NMDS0.5uf.point$MDS1,degree=2)))  #r^2=0.68, p=5e-11
summary(lm(faith ~ poly(NMDS0.5uf.point$MDS1,degree=2)))  #r^2=0.79, p=4e-15
summary(lm(ObservedOTU ~ poly(NMDS0.5uf.point$MDS1,degree=2)))  #r^2=0.68, p=5e-11
summary(lm(pielou ~ poly(NMDS0.5uf.point$MDS1,degree=2)))  #r^2=0.45, p=2e-5
summary(lm(shannon ~ poly(NMDS0.5uf.point$MDS1,degree=2)))  #r^2=0.53, p=1e-7
summary(lm(faith ~ poly(NMDS0.5uf.point$MDS1,degree=2)))  #r^2=0.79, p=4e-15
summary(lm(pielou ~ poly(NMDS0.5uf.point$MDS1,degree=2)))
summary(lm(ObservedOTU ~ poly(NMDS0.5uf.point$MDS1,degree=2)))
cor.test(pH,NMDS0.5uf.point$MDS1) #r0.82, p=1e-9
summary(lm(shannon[index] ~ poly(pH[index],degree=2)))
library(ggplot2)
ggplot(faithfuld, aes(waiting, eruptions)) +
geom_raster(aes(fill = density))
qplot(x=NMDS0.5uf.point$MDS1,x=NMDS0.5uf.point$MDS3)+geom_raster(aes(fill = shannon),interpolate = TRUE)
qplot(x=NMDS0.5uf.point$MDS1,y=NMDS0.5uf.point$MDS3)+geom_raster(aes(fill = shannon),interpolate = TRUE)
temp<-data.frame(A=NMDS0.5uf.point$MDS1,B=NMDS0.5uf.point$MDS3,H=shannon)
ggplot(data=temp,aes(A,B))+geom_raster(aes(fill = H),interpolate = T)
faithfuld
x <- 1:10
y <- rnorm(10)
par(mfrow = c(2,1))
plot(x, y, main = "approx(.) and approxfun(.)")
points(approx(x, y), col = 2, pch = "*")
library(dplyr)
library(ggplot2)
library(gstat)
library(maptools)
install.packages("gstat")
library(ggplot2)
library(gstat)
library(sp)
library(maptools)
library(dplyr)
test<-data.frame(x=NMDS0.5uf.point$MDS1,y=NMDS0.5uf.point$MDS3,z=shannon)
coordinates(test)=~x+y
test
qplot(test)
plot(test)
x.range<-c(min(NMDS0.5uf.point$MDS1), max(NMDS0.5uf.point$MDS1))
y.range<-c(min(NMDS0.5uf.point$MDS3), max(NMDS0.5uf.point$MDS3))
grd <- expand.grid(x = seq(from = x.range[1], to = x.range[2], by = 0.1),
y = seq(from = y.range[1], to = y.range[2], by = 0.1))
grd <- expand.grid(x = seq(from = x.range[1], to = x.range[2], by = 0.01),
y = seq(from = y.range[1], to = y.range[2], by = 0.01))
coordinates(grd) <- ~x + y
gridded(grd) <- TRUE
grd
plot(grd, cex = 1.5, col="grey")
points(test, pch = 1, col = "red", cex = 1)
idw <- idw(formula = shannon ~ 1, locations = test, newdata = grd)
idw.output = as.data.frame(idw)
names(idw.output)[1:3] <- c("NMDS1", "NMDS3", "Shannon")
ggplot() +
geom_tile(data = idw.output, aes(x = NMDS1, y = NMDS3, fill=Shannon)) +
geom_point(data = NMDS0.5uf, aes(x=MDS1, y=MDS3, color=Sample.Type))
ggplot() +
geom_tile(data = idw.output, aes(x = NMDS1, y = NMDS3, fill=Shannon)) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type))
ggplot() +
geom_tile(data = idw.output, aes(x = NMDS1, y = NMDS3, fill=Shannon)) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient(low="cyan", high="orange") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_tile(data = idw.output, aes(x = NMDS1, y = NMDS3, fill=Shannon)) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient(low="firebrick3", high="green4") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_tile(data = idw.output, aes(x = NMDS1, y = NMDS3, fill=Shannon)) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient(low="white", high="grey") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
test<-data.frame(x=NMDS0.5uf.point$MDS1,y=NMDS0.5uf.point$MDS2,z=shannon)
test<-data.frame(x=NMDS0.5uf.point$MDS1,y=NMDS0.5uf.point$MDS2,z=shannon)
coordinates(test)=~x+y
x.range<-c(min(NMDS0.5uf.point$MDS1), max(NMDS0.5uf.point$MDS1))
y.range<-c(min(NMDS0.5uf.point$MDS2), max(NMDS0.5uf.point$MDS2))
grd <- expand.grid(x = seq(from = x.range[1], to = x.range[2], by = 0.01),
y = seq(from = y.range[1], to = y.range[2], by = 0.01))
coordinates(grd) <- ~x + y
gridded(grd) <- TRUE
idw <- idw(formula = shannon ~ 1, locations = test, newdata = grd)
idw.output = as.data.frame(idw)
names(idw.output)[1:3] <- c("NMDS1", "NMDS2", "Shannon")
ggplot() +
geom_tile(data = idw.output, aes(x = NMDS1, y = NMDS2, fill=Shannon)) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS2, color=Sample.Type)) +
scale_fill_gradient(low="white", high="grey") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = idw.output, aes(x = NMDS1, y = NMDS3, fill=Shannon), interpolate = T) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient(low="white", high="grey") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
test<-data.frame(x=NMDS0.5uf.point$MDS1,y=NMDS0.5uf.point$MDS3,z=shannon)
coordinates(test)=~x+y
x.range<-c(min(NMDS0.5uf.point$MDS1), max(NMDS0.5uf.point$MDS1))
y.range<-c(min(NMDS0.5uf.point$MDS3), max(NMDS0.5uf.point$MDS3))
grd <- expand.grid(x = seq(from = x.range[1], to = x.range[2], by = 0.01),
y = seq(from = y.range[1], to = y.range[2], by = 0.01))
coordinates(grd) <- ~x + y
gridded(grd) <- TRUE
idw <- idw(formula = shannon ~ 1, locations = test, newdata = grd)
idw.output = as.data.frame(idw)
names(idw.output)[1:3] <- c("NMDS1", "NMDS3", "Shannon")
ggplot() +
geom_raster(data = idw.output, aes(x = NMDS1, y = NMDS3, fill=Shannon), interpolate = T) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient(low="white", high="grey") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = idw.output, aes(x = NMDS1, y = NMDS3, fill=Shannon), interpolate = T) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_colour_gradient2(low="white", high="grey", mid="white") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = idw.output, aes(x = NMDS1, y = NMDS3, fill=Shannon), interpolate = T) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient2(low="white", high="grey", mid="white") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = idw.output, aes(x = NMDS1, y = NMDS3, fill=Shannon), interpolate = T) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient2(low="grey", high="white", mid="white") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = idw.output, aes(x = NMDS1, y = NMDS3, fill=Shannon), interpolate = T) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient2(low="black", high="white", mid="white") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = idw.output, aes(x = NMDS1, y = NMDS3, fill=Shannon), interpolate = T) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient2(low="black", high="white", mid="grey") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = idw.output, aes(x = NMDS1, y = NMDS3, fill=Shannon), interpolate = T) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient2(low="white", high="black", mid="white") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = idw.output, aes(x = NMDS1, y = NMDS3, fill=Shannon), interpolate = T) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient2(low="white", high="black", mid="white", midpoint = 5.5) +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = idw.output, aes(x = NMDS1, y = NMDS3, fill=Shannon), interpolate = T) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient2(low="white", high="black", mid="grey40", midpoint = 5.5) +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
test<-data.frame(x=NMDS0.5uf.point$MDS1,y=NMDS0.5uf.point$MDS3,z=shannon)
coordinates(test)=~x+y
x.range<-c(min(NMDS0.5uf.point$MDS1), max(NMDS0.5uf.point$MDS1))
y.range<-c(min(NMDS0.5uf.point$MDS3), max(NMDS0.5uf.point$MDS3))
grd <- expand.grid(x = seq(from = x.range[1], to = x.range[2], by = 0.01),
y = seq(from = y.range[1], to = y.range[2], by = 0.01))
coordinates(grd) <- ~x + y
gridded(grd) <- TRUE
idw <- krige(formula = shannon ~ 1, locations = test, newdata = grd)
idw.output = as.data.frame(idw)
names(idw.output)[1:3] <- c("NMDS1", "NMDS3", "Shannon")
ggplot() +
geom_raster(data = idw.output, aes(x = NMDS1, y = NMDS3, fill=Shannon), interpolate = T) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient2(low="white", high="black", mid="grey40", midpoint = 5.5) +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
install.packages("pracma")
library(pracma)
interp2(NMDS0.5uf.point$MDS1,NMDS0.5uf.point$MDS3,shannon,x.range,y.range)
install.packages("interp")
library(interp)
interp(NMDS0.5uf.point$MDS1,NMDS0.5uf.point$MDS3,shannon)
interp(NMDS0.5uf.point$MDS1,NMDS0.5uf.point$MDS3,shannon)->temp
str(temp)
idw.output
interp(NMDS0.5uf.point$MDS1,NMDS0.5uf.point$MDS3,shannon)->temp
temp$z->temp2
rownames(temp2)<-temp$x
colnames(temp2)<-temp$y
temp
temp2
reshape2::melt(temp2)->temp3
temp3
ggplot() +
geom_raster(data = temp3, aes(x = Var1, y = Var2, fill=value), interpolate = T) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient2(low="white", high="black", mid="grey40", midpoint = 5.5) +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = temp3, aes(x = Var1, y = Var2, fill=value), interpolate = T) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient2(low="white", high="firebrick3", mid="green4", midpoint = 5.5) +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
interp(NMDS0.5uf.point$MDS1,NMDS0.5uf.point$MDS3,ObservedOTU)->temp
temp$z->temp2
rownames(temp2)<-temp$x
colnames(temp2)<-temp$y
reshape2::melt(temp2)->temp3
ggplot() +
geom_raster(data = temp3, aes(x = Var1, y = Var2, fill=value), interpolate = T) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient2(low="white", high="firebrick3", mid="green4", midpoint = 5.5) +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
interp(NMDS0.5uf.point$MDS1,NMDS0.5uf.point$MDS3,ObservedOTU)->temp
temp$z->temp2
rownames(temp2)<-temp$x
colnames(temp2)<-temp$y
reshape2::melt(temp2)->temp3
ggplot() +
geom_raster(data = temp3, aes(x = Var1, y = Var2, fill=value), interpolate = T) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient2(low="white", high="firebrick3", mid="green4", midpoint = 1700) +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
library(ggplot2)
library(interp)
interp(NMDS0.5uf.point$MDS1,NMDS0.5uf.point$MDS3,shannon)->temp
temp$z->temp2
rownames(temp2)<-temp$x
colnames(temp2)<-temp$y
reshape2::melt(temp2)->temp3
ggplot() +
geom_raster(data = temp3, aes(x = Var1, y = Var2, fill=value), interpolate = T) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient2(low="white", high="firebrick3", mid="green4", midpoint = 5.5) +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = temp3, aes(x = Var1, y = Var2, fill=value), interpolate = F) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient2(low="white", high="firebrick3", mid="green4", midpoint = 5.5) +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
interp(NMDS0.5uf.point$MDS1,NMDS0.5uf.point$MDS3,shannon,nx = 100, ny = 100)->temp
temp$z->temp2
rownames(temp2)<-temp$x
colnames(temp2)<-temp$y
reshape2::melt(temp2)->temp3
ggplot() +
geom_raster(data = temp3, aes(x = Var1, y = Var2, fill=value), interpolate = F) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient2(low="white", high="firebrick3", mid="green4", midpoint = 5.5) +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = temp3, aes(x = Var1, y = Var2, fill=value), interpolate = F) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradient2(low="white", high="firebrick3", mid="green4") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = temp3, aes(x = Var1, y = Var2, fill=value), interpolate = F) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradientn(c("white", "green4", "firebrick3")) +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = temp3, aes(x = Var1, y = Var2, fill=value), interpolate = F) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradientn(colors=c("white", "green4", "firebrick3")) +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = temp3, aes(x = Var1, y = Var2, fill=value), interpolate = F) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradientn(colors=c("white", "green4", "firebrick3"),na.value = "grey20") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = temp3, aes(x = Var1, y = Var2, fill=value), interpolate = F) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradientn(colors=c("white", "green4", "firebrick3"),na.value = "grey90") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
interp(NMDS0.5uf.point$MDS1,NMDS0.5uf.point$MDS3,shannon,nx = 100, ny = 100)->temp
temp$z->temp2
rownames(temp2)<-temp$x
colnames(temp2)<-temp$y
reshape2::melt(temp2)->temp3
names(temp3)<-c("NMDS1","NMDS3","value")
ggplot() +
geom_raster(data = temp3, aes(x = NMDS1, y = NMDS3, fill=value), interpolate = F) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradientn(colors=c("white", "green4", "firebrick3"),na.value = "grey90") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))->shannon.map
interp(NMDS0.5uf.point$MDS1,NMDS0.5uf.point$MDS3,faith,nx = 100, ny = 100)->temp
temp$z->temp2
rownames(temp2)<-temp$x
colnames(temp2)<-temp$y
reshape2::melt(temp2)->temp3
names(temp3)<-c("NMDS1","NMDS3","value")
ggplot() +
geom_raster(data = temp3, aes(x = NMDS1, y = NMDS3, fill=value), interpolate = F) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradientn(colors=c("white", "green4", "firebrick3"),na.value = "grey90") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))->faith.map
faith.map
interp(NMDS0.5uf.point$MDS1,NMDS0.5uf.point$MDS3,shannon,nx = 100, ny = 100)->temp
temp$z->temp2
rownames(temp2)<-temp$x
colnames(temp2)<-temp$y
reshape2::melt(temp2)->temp3
names(temp3)<-c("NMDS1","NMDS3","shannon")
ggplot() +
geom_raster(data = temp3, aes(x = NMDS1, y = NMDS3, fill=shannon), interpolate = F) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradientn(colors=c("white", "greenyellow", "firebrick3"),na.value = "grey90",name="Shannon") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = temp3, aes(x = NMDS1, y = NMDS3, fill=shannon), interpolate = F) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradientn(colors=c("white", "gold1", "firebrick3"),na.value = "grey90",name="Shannon") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = temp3, aes(x = NMDS1, y = NMDS3, fill=shannon), interpolate = F) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type)) +
scale_fill_gradientn(colors=c("white", "gold1", "firebrick1"),na.value = "grey90",name="Shannon") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = temp3, aes(x = NMDS1, y = NMDS3, fill=shannon), interpolate = F) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type),show.legend = FALSE) +
scale_fill_gradientn(colors=c("white", "gold1", "firebrick1"),na.value = "grey90",name="Shannon") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = temp3, aes(x = NMDS1, y = NMDS3, fill=shannon), interpolate = F) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type),show.legend = FALSE) +
scale_fill_gradientn(colors=c("white", "gold1", "deepskyblue"),na.value = "grey90",name="Shannon") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = temp3, aes(x = NMDS1, y = NMDS3, fill=shannon), interpolate = F) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type),show.legend = FALSE) +
scale_fill_gradientn(colors=c("white", "gold1", "darkmagenta"),na.value = "grey90",name="Shannon") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot() +
geom_raster(data = temp3, aes(x = NMDS1, y = NMDS3, fill=shannon), interpolate = F) +
geom_point(data = NMDS0.5uf.point, aes(x=MDS1, y=MDS3, color=Sample.Type),show.legend = FALSE) +
scale_fill_gradientn(colors=c("white", "khaki1", "darkmagenta"),na.value = "grey90",name="Shannon") +
theme_bw(12)+scale_colour_manual(name= NULL,values=c(color3,color1,color2))+
theme(panel.grid = element_blank(),
axis.text.y = element_text(color="black"))
ggplot(data=betaNTI.v, aes(x=rowname,y=value))+
#  geom_segment(x=1,y=100,xend=2,yend=100,size=0.5,inherit.aes = F)+geom_segment(x=1,y=150,xend=3,yend=150,size=0.5,inherit.aes = F)+
#  geom_violin(aes(fill=rowname),linetype=0)+
geom_violin(aes(fill=rowname),linetype=0)+geom_boxplot(width=0.2,lwd=0.2,outlier.size = 1.5)+
#  geom_blank(aes(y = y_min))+geom_blank(aes(y = y_max))+  #just to set the limits of facet
theme_bw(base_size=12)+ guides(fill=FALSE)+
theme(panel.grid = element_blank(),
axis.title.x=element_blank(),
axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"))+
geom_segment(y=2,x=0.5,yend=2,xend=6.5,linetype="dashed")+
scale_fill_brewer(palette = 6,type = "qual")+ylab(expression(beta*"NTI"))+ylim(0,17)
library(ggplot2)
ggplot(data=betaNTI.v, aes(x=rowname,y=value))+
#  geom_segment(x=1,y=100,xend=2,yend=100,size=0.5,inherit.aes = F)+geom_segment(x=1,y=150,xend=3,yend=150,size=0.5,inherit.aes = F)+
#  geom_violin(aes(fill=rowname),linetype=0)+
geom_violin(aes(fill=rowname),linetype=0)+geom_boxplot(width=0.2,lwd=0.2,outlier.size = 1.5)+
#  geom_blank(aes(y = y_min))+geom_blank(aes(y = y_max))+  #just to set the limits of facet
theme_bw(base_size=12)+ guides(fill=FALSE)+
theme(panel.grid = element_blank(),
axis.title.x=element_blank(),
axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"))+
geom_segment(y=2,x=0.5,yend=2,xend=6.5,linetype="dashed")+
scale_fill_brewer(palette = 6,type = "qual")+ylab(expression(beta*"NTI"))+ylim(0,17)
dunn.test::dunn.test(betaNTI.v$value,betaNTI.v$rowname,method = "bh")
#normality holds so t-test is OK
t.test(description$SoilOrganicCarbon~Sample.Type,na.action = "na.omit",var.equal = TRUE)
t.test(description$DissolvableOrganicCarbon~Sample.Type,na.action = "na.omit",var.equal = FALSE)
sd(DissolvableOrganicCarbon[isBurnt])
sd(DOC[isBurnt])
sd(DOC[isUnburnt])
mean(DOC[isUnburnt])
sd(TOC[isBurnt])
sd(TOC[isUnburnt])
mean(TOC[isUnburnt])
mean(TOC[isBurnt])
t.test(TOC[isBurnt],TOC[isUnburnt])
